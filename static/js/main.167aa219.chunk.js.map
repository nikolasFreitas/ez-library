{"version":3,"sources":["img/books.png","img/Clipboard.png","img/under-construction.png","Components/Header/style.js","Components/Header/index.js","screens/Home/style.js","screens/Home/index.js","router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","Styled","div","_templateObject","Box","_templateObject2","UpperHeadBox","_templateObject3","Title","Link","_templateObject4","NavBarBox","_templateObject5","NavBarContainer","_templateObject6","NavLink","_templateObject7","_templateObject8","props","selected","withRouter","_ref","location","react_default","a","createElement","to","pathname","style_templateObject","BoxContent","style_templateObject2","ImageBackground","img","style_templateObject3","url","Navigation","style_templateObject4","style_templateObject5","NavContent","style_templateObject6","Screen","style_Container","books","style_Title","clipboard","underConstruction","AppRouter","react_router_dom","Components_Header","react_router","path","exact","component","Home","App","router","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.167aa219.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/books.254a7e93.png\";","module.exports = __webpack_public_path__ + \"static/media/Clipboard.c5fe2987.png\";","module.exports = __webpack_public_path__ + \"static/media/under-construction.6ea286ca.png\";","import Styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = Styled.div`\n  display: flex;\n\tjustify-content: center;\n\twidth: 100%;\n\tflex-wrap: wrap;\n`;\n\nexport const Box = Styled.div`\n\tpadding: 0px 15px;\n\tmax-width: 960px;\n\twidth: 100%;\n`;\n\nexport const UpperHeadBox = Styled.div`\n\twidth: 100%;\n\theight: 40px;\n\tdisplay: flex;\n  align-items: center;\n\tjustify-content: center;\n\ttext-align: center;\n\tbackground: #c0392b;\n`;\n\nexport const Title = Styled(Link)`\n\tdisplay: inline-block;\n\ttext-decoration: none;\n\tcolor: white;\n\tmargin: 0px auto;\n\tfont-weight: bolder;\n`;\n\nexport const NavBarBox = Styled.div`\n\tdisplay: flex;\n`;\n\nexport const NavBarContainer = Styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: flex-end;\n\tpadding:15px 0px 0px;\n\theight: 60px;\n\twidth: 100%;\n\tbackground: #ecf0f1;\n`;\n\nexport const NavBar = Styled.div`\n\tdisplay: flex;\n\tflex-flow: row;\n`;\n\nexport const NavLink = Styled(Link)`\n\twidth: 140px;\n\tdisplay: block;\n\ttext-align: center;\n\tpadding: 0px 15px 10px;\n\ttransition: all ease-out 0.3s;\n\tborder-bottom: 2px solid ${props => (props.selected ? '#8e44ad' : 'transparent')};\n\ttext-decoration: none;\n\toutline: none;\n`;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport * as Styled from './style';\n\nconst Header = ({ location }) => {\n  return (\n    <Styled.Container>\n      <Styled.UpperHeadBox>\n        <Styled.Box>\n          <Styled.Title to=\"/\">Ez Library</Styled.Title>\n        </Styled.Box>\n      </Styled.UpperHeadBox>\n      {location.pathname !== '/' && (\n        <Styled.NavBarContainer>\n          <Styled.Box>\n            <Styled.NavBarBox>\n              <Styled.NavLink to=\"procurar-livros\" selected={location.pathname === '/procurar-livros'}>\n                procurar livros\n              </Styled.NavLink>\n              <Styled.NavLink to=\"meus-livros\" selected={location.pathname === '/meus-livros'}>\n                meus livros\n              </Styled.NavLink>\n            </Styled.NavBarBox>\n          </Styled.Box>\n        </Styled.NavBarContainer>\n      )}\n    </Styled.Container>\n  );\n};\n\nexport default withRouter(Header);\n","import Styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = Styled.div`\n  padding: 30px 15px 15px;\n  height: calc(100vh - 40px);\n  width: 100%;\n  background: #ecf0f1;\n\n  @media screen and (max-width: 700px) {\n    height: auto;\n  }\n`;\n\nexport const BoxContent = Styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  max-width: 960px;\n  margin: 0px auto;\n  border: 0px;\n\n  @media screen and (max-width: 700px) {\n    flex-flow: column;\n    display: flex-block;\n  }\n`;\n\nexport const ImageBackground = Styled.img`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n  background-image: url(${props => props.url});\n  background-position: center center;\n  background-size: 90%;\n  background-repeat: no-repeat;\n  z-index: 0;\n\n  filter: grayscale(80%) blur(5px);\n  \n  transition: all ease-in-out .3s;\n\n  @media screen and (max-width: 700px) {\n    filter: none;\n    background-size: 100%;\n  }\n`;\n\nexport const Navigation = Styled(Link)`\n  width: 33%;\n  height: 100%;\n  padding: 0px 15px;\n  text-decoration: none;\n  background: white;\n  position: relative;\n  outline: none;\n  border-right: 2px solid #2c3e50;\n  &:last-child {\n    border-right: 0px;\n  }\n  \n  &:hover ${ImageBackground} {\n    filter: none;\n    background-size: 100%;\n  }\n  \n  @media screen and (max-width: 700px) {\n    width: 100%;\n    height: 300px;\n    border-right: 0px;\n    margin-bottom: 30px;\n    background-size: 100%;\n  }\n  \n`;\n\nexport const Title = Styled.p`\n  width: calc(100% - 1px);\n  margin: 0px 1px;\n  position: absolute;\n  top: 30px;\n  left: 0;\n  font-size: 24px;\n  text-align: center; \n  font-weight: bolder;\n  background: white;\n  color: #2980b9;\n\n  @media screen and (max-width: 700px) {\n    top: 0;\n  }\n`;\n\nexport const NavContent = Styled.p`\n  width: 100%;\n  height: 90px;\n  background: white;\n  position: absolute;\n  text-align: justify;\n  margin: 0px;\n  padding: 15px;\n  left: 0;\n  bottom: 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Styled from './style';\nimport books from '../../img/books.png';\nimport clipboard from '../../img/Clipboard.png';\nimport underConstruction from '../../img/under-construction.png';\n\nconst Screen = () => (\n  <Styled.Container>\n    <Styled.BoxContent>\n      <Styled.Navigation to=\"procurar-livros\">\n        <Styled.ImageBackground url={books} />\n        <Styled.Title>Procurar um livro</Styled.Title>\n        <Styled.NavContent>\n          Aqui vocÃª encontra nosso acervo inteiro, e pode inclusive pega um emprestado\n        </Styled.NavContent>\n      </Styled.Navigation>\n      <Styled.Navigation to=\"meus-livros\">\n        <Styled.ImageBackground url={clipboard} />\n        <Styled.Title>Meus livros</Styled.Title>\n        <Styled.NavContent>\n          Verifique o status do sues livros, se Ã© renovÃ¡vel, se hÃ¡ algum atraso ou a data de entrega\n        </Styled.NavContent>\n      </Styled.Navigation>\n      <Styled.Navigation>\n        <Styled.ImageBackground url={underConstruction} />\n        <Styled.Title>Em construÃ§Ã£o</Styled.Title>\n        <Styled.NavContent>Aqui terÃ¡ uma pÃ¡gina nova a seu serviÃ§o :D</Styled.NavContent>\n      </Styled.Navigation>\n    </Styled.BoxContent>\n  </Styled.Container>\n);\n\nexport default Screen;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './Components/Header';\nimport Home from './screens/Home';\n\nconst AppRouter = () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n    </Switch>\n  </Router>\n);\n\nexport default AppRouter;\n","import React from 'react';\nimport AppRouter from './router';\nimport './App.css';\n\nconst App = () => (<AppRouter />);\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}